{"ast":null,"code":"import * as types from '../constants/actions';\nimport React from 'react';\nvar initState = {\n  onLoad: false,\n  books: [],\n  currentBook: {\n    name: '',\n    genre: '',\n    author: {\n      name: '',\n      age: null,\n      books: []\n    }\n  }\n};\n\nvar eventReducer = function eventReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.AllBooks:\n      var AllBooksState = Object.assign({}, state);\n\n      if (AllBooksState.onLoad === false) {\n        for (var i = 0; i < action.allBooks.length; i++) {\n          AllBooksState.books.push(action.allBooks[i]);\n        }\n\n        AllBooksState.onLoad = true;\n      }\n\n      return AllBooksState;\n\n    case types.SingleBook:\n      var SingleBookState = Object.assign({}, state);\n      SingleBookState.currentBook.name = action.currentBook.name;\n      SingleBookState.currentBook.genre = action.currentBook.genre;\n      SingleBookState.currentBook.author.name = action.currentBook.author.name;\n      SingleBookState.currentBook.author.age = action.currentBook.author.age;\n\n      for (var _i = 0; _i < action.currentBook.author.book.length; _i++) {\n        SingleBookState.currentBook.author.books.push(action.currentBook.author.book[_i]);\n      }\n\n      return SingleBookState;\n\n    case types.AddBook:\n      var AddBookState = Object.assign({}, state);\n      var newBook = {};\n      newBook.name = action.newInfo.name;\n      newBook.genre = action.newInfo.genre; // newBook.author\n\n      console.log('inside addbook ', action);\n      return AddBookState;\n\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;","map":{"version":3,"sources":["/Users/michaelmarceca/Codesmith/GQLTut/client/src/components/reducers/eventReducer.js"],"names":["types","React","initState","onLoad","books","currentBook","name","genre","author","age","eventReducer","state","action","type","AllBooks","AllBooksState","Object","assign","i","allBooks","length","push","SingleBook","SingleBookState","book","AddBook","AddBookState","newBook","newInfo","console","log"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAE,KADQ;AAEhBC,EAAAA,KAAK,EAAE,EAFS;AAGhBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,EADK;AAEXC,IAAAA,KAAK,EAAE,EAFI;AAGXC,IAAAA,MAAM,EAAE;AACNF,MAAAA,IAAI,EAAE,EADA;AAENG,MAAAA,GAAG,EAAE,IAFC;AAGNL,MAAAA,KAAK,EAAE;AAHD;AAHG;AAHG,CAAlB;;AAcA,IAAMM,YAAY,GAAG,SAAfA,YAAe,GAA6B;AAAA,MAA5BC,KAA4B,uEAAtBT,SAAsB;AAAA,MAAXU,MAAW;;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKb,KAAK,CAACc,QAAX;AACE,UAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAtB;;AACA,UAAGI,aAAa,CAACZ,MAAd,KAAyB,KAA5B,EAAmC;AACjC,aAAI,IAAIe,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,MAAM,CAACO,QAAP,CAAgBC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC9CH,UAAAA,aAAa,CAACX,KAAd,CAAoBiB,IAApB,CAAyBT,MAAM,CAACO,QAAP,CAAgBD,CAAhB,CAAzB;AACD;;AACDH,QAAAA,aAAa,CAACZ,MAAd,GAAuB,IAAvB;AACD;;AACH,aAAOY,aAAP;;AAEA,SAAKf,KAAK,CAACsB,UAAX;AACE,UAAMC,eAAe,GAAGP,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAxB;AACAY,MAAAA,eAAe,CAAClB,WAAhB,CAA4BC,IAA5B,GAAmCM,MAAM,CAACP,WAAP,CAAmBC,IAAtD;AACAiB,MAAAA,eAAe,CAAClB,WAAhB,CAA4BE,KAA5B,GAAoCK,MAAM,CAACP,WAAP,CAAmBE,KAAvD;AACAgB,MAAAA,eAAe,CAAClB,WAAhB,CAA4BG,MAA5B,CAAmCF,IAAnC,GAA0CM,MAAM,CAACP,WAAP,CAAmBG,MAAnB,CAA0BF,IAApE;AACAiB,MAAAA,eAAe,CAAClB,WAAhB,CAA4BG,MAA5B,CAAmCC,GAAnC,GAAyCG,MAAM,CAACP,WAAP,CAAmBG,MAAnB,CAA0BC,GAAnE;;AACA,WAAI,IAAIS,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAAGN,MAAM,CAACP,WAAP,CAAmBG,MAAnB,CAA0BgB,IAA1B,CAA+BJ,MAAlD,EAA0DF,EAAC,EAA3D,EAA+D;AAC7DK,QAAAA,eAAe,CAAClB,WAAhB,CAA4BG,MAA5B,CAAmCJ,KAAnC,CAAyCiB,IAAzC,CAA8CT,MAAM,CAACP,WAAP,CAAmBG,MAAnB,CAA0BgB,IAA1B,CAA+BN,EAA/B,CAA9C;AACD;;AACH,aAAOK,eAAP;;AAEA,SAAKvB,KAAK,CAACyB,OAAX;AACE,UAAMC,YAAY,GAAGV,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAArB;AACA,UAAIgB,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,CAACrB,IAAR,GAAeM,MAAM,CAACgB,OAAP,CAAetB,IAA9B;AACAqB,MAAAA,OAAO,CAACpB,KAAR,GAAgBK,MAAM,CAACgB,OAAP,CAAerB,KAA/B,CAJF,CAKE;;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BlB,MAA9B;AAEF,aAAOc,YAAP;;AACA;AACE,aAAOf,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,YAAf","sourcesContent":["import * as types from '../constants/actions';\nimport React from 'react';\n\nconst initState = {\n  onLoad: false,\n  books: [],\n  currentBook: {\n    name: '',\n    genre: '',\n    author: {\n      name: '',\n      age: null,\n      books: []\n    }\n  }\n}\n\nconst eventReducer = (state=initState, action) => {\n  switch(action.type) {\n    case(types.AllBooks):\n      const AllBooksState = Object.assign({}, state);\n      if(AllBooksState.onLoad === false) {\n        for(let i = 0; i < action.allBooks.length; i++) {\n          AllBooksState.books.push(action.allBooks[i]);\n        }\n        AllBooksState.onLoad = true;        \n      }\n    return AllBooksState;\n\n    case(types.SingleBook):\n      const SingleBookState = Object.assign({}, state);\n      SingleBookState.currentBook.name = action.currentBook.name;\n      SingleBookState.currentBook.genre = action.currentBook.genre;\n      SingleBookState.currentBook.author.name = action.currentBook.author.name;\n      SingleBookState.currentBook.author.age = action.currentBook.author.age;\n      for(let i = 0; i < action.currentBook.author.book.length; i++) {\n        SingleBookState.currentBook.author.books.push(action.currentBook.author.book[i])\n      }\n    return SingleBookState;\n\n    case(types.AddBook):\n      const AddBookState = Object.assign({}, state);\n      let newBook = {};\n      newBook.name = action.newInfo.name;\n      newBook.genre = action.newInfo.genre;\n      // newBook.author\n      console.log('inside addbook ',action);\n\n    return AddBookState;\n    default:\n      return state;\n  }\n}\n\nexport default eventReducer;"]},"metadata":{},"sourceType":"module"}