{"ast":null,"code":"import * as types from '../constants/actions';\nimport React from 'react';\nvar initState = {\n  books: [],\n  currentBook: {\n    name: '',\n    genre: '',\n    author: {\n      name: '',\n      age: null,\n      books: []\n    }\n  }\n};\n\nvar eventReducer = function eventReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.AllBooks:\n      console.log(action.allBooks);\n      var AllBooksState = Object.assign({}, state);\n\n      for (var i = 0; i < action.allBooks.length; i++) {\n        AllBooksState.books.push(action.allBooks[i]);\n      }\n\n      console.log(AllBooksState);\n      return AllBooksState;\n\n    case types.SingleBook:\n      // console.log('in single book ', action.currentBook.author)\n      console.log('state ', state);\n      var SingleBookState = Object.assign({}, state);\n      SingleBookState.currentBook.name = action.currentBook.name;\n      SingleBookState.currentBook.genre = action.currentBook.genre;\n      SingleBookState.currentBook.author.name = action.currentBook.author.name;\n      SingleBookState.currentBook.author.age = action.currentBook.author.age;\n\n      for (var _i = 0; _i < action.currentBook.author.book.length; _i++) {\n        SingleBookState.currentBook.author.books.push(action.currentBook.author.book[_i]);\n      }\n\n      return SingleBookState;\n\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;","map":{"version":3,"sources":["/Users/michaelmarceca/Codesmith/GQLTut/client/src/components/reducers/eventReducer.js"],"names":["types","React","initState","books","currentBook","name","genre","author","age","eventReducer","state","action","type","AllBooks","console","log","allBooks","AllBooksState","Object","assign","i","length","push","SingleBook","SingleBookState","book"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,EADK;AAEXC,IAAAA,KAAK,EAAE,EAFI;AAGXC,IAAAA,MAAM,EAAE;AACNF,MAAAA,IAAI,EAAE,EADA;AAENG,MAAAA,GAAG,EAAE,IAFC;AAGNL,MAAAA,KAAK,EAAE;AAHD;AAHG;AAFG,CAAlB;;AAaA,IAAMM,YAAY,GAAG,SAAfA,YAAe,GAA6B;AAAA,MAA5BC,KAA4B,uEAAtBR,SAAsB;AAAA,MAAXS,MAAW;;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKZ,KAAK,CAACa,QAAX;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,QAAnB;AACA,UAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,CAAtB;;AACA,WAAI,IAAIU,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGT,MAAM,CAACK,QAAP,CAAgBK,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9CH,QAAAA,aAAa,CAACd,KAAd,CAAoBmB,IAApB,CAAyBX,MAAM,CAACK,QAAP,CAAgBI,CAAhB,CAAzB;AACD;;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAYE,aAAZ;AAEF,aAAOA,aAAP;;AAEA,SAAKjB,KAAK,CAACuB,UAAX;AACE;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,KAAtB;AACA,UAAMc,eAAe,GAAGN,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,CAAxB;AACAc,MAAAA,eAAe,CAACpB,WAAhB,CAA4BC,IAA5B,GAAmCM,MAAM,CAACP,WAAP,CAAmBC,IAAtD;AACAmB,MAAAA,eAAe,CAACpB,WAAhB,CAA4BE,KAA5B,GAAoCK,MAAM,CAACP,WAAP,CAAmBE,KAAvD;AACAkB,MAAAA,eAAe,CAACpB,WAAhB,CAA4BG,MAA5B,CAAmCF,IAAnC,GAA0CM,MAAM,CAACP,WAAP,CAAmBG,MAAnB,CAA0BF,IAApE;AACAmB,MAAAA,eAAe,CAACpB,WAAhB,CAA4BG,MAA5B,CAAmCC,GAAnC,GAAyCG,MAAM,CAACP,WAAP,CAAmBG,MAAnB,CAA0BC,GAAnE;;AACA,WAAI,IAAIY,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAAGT,MAAM,CAACP,WAAP,CAAmBG,MAAnB,CAA0BkB,IAA1B,CAA+BJ,MAAlD,EAA0DD,EAAC,EAA3D,EAA+D;AAC7DI,QAAAA,eAAe,CAACpB,WAAhB,CAA4BG,MAA5B,CAAmCJ,KAAnC,CAAyCmB,IAAzC,CAA8CX,MAAM,CAACP,WAAP,CAAmBG,MAAnB,CAA0BkB,IAA1B,CAA+BL,EAA/B,CAA9C;AACD;;AACH,aAAOI,eAAP;;AAEA;AACE,aAAOd,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,eAAeD,YAAf","sourcesContent":["import * as types from '../constants/actions';\nimport React from 'react';\n\nconst initState = {\n  books: [],\n  currentBook: {\n    name: '',\n    genre: '',\n    author: {\n      name: '',\n      age: null,\n      books: []\n    }\n  }\n}\n\nconst eventReducer = (state=initState, action) => {\n  switch(action.type) {\n    case(types.AllBooks):\n      console.log(action.allBooks)\n      const AllBooksState = Object.assign({}, state);\n      for(let i = 0; i < action.allBooks.length; i++) {\n        AllBooksState.books.push(action.allBooks[i])\n      }\n      console.log(AllBooksState)\n      \n    return AllBooksState;\n\n    case(types.SingleBook):\n      // console.log('in single book ', action.currentBook.author)\n      console.log('state ', state)\n      const SingleBookState = Object.assign({}, state)\n      SingleBookState.currentBook.name = action.currentBook.name;\n      SingleBookState.currentBook.genre = action.currentBook.genre;\n      SingleBookState.currentBook.author.name = action.currentBook.author.name;\n      SingleBookState.currentBook.author.age = action.currentBook.author.age;\n      for(let i = 0; i < action.currentBook.author.book.length; i++) {\n        SingleBookState.currentBook.author.books.push(action.currentBook.author.book[i])\n      }\n    return SingleBookState;\n\n    default:\n      return state;\n  }\n}\n\nexport default eventReducer;"]},"metadata":{},"sourceType":"module"}